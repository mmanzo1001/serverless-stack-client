{"version":3,"sources":["containers/Home.js","containers/NotFound.js","components/LoaderButton.js","libs/hooksLib.js","containers/Login.js","components/AppliedRoute.js","containers/Signup.js","config.js","libs/awsLib.js","libs/ImageInfo.js","containers/NewNote.js","containers/Notes.js","components/BillingForm.js","containers/Settings.js","components/AuthenticatedRoute.js","components/UnauthenticatedRoute.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","useState","notes","setNotes","isLoading","setIsLoading","useEffect","a","isAuthenticated","API","get","alert","onLoad","className","PageHeader","ListGroup","concat","map","note","i","key","noteID","to","ListGroupItem","header","content","trim","split","Date","createdAt","toLocaleString","renderNotesList","NotFound","LoaderButton","disabled","Button","Glyphicon","glyph","children","useFormFields","initialState","fields","setValues","event","target","id","value","Login","email","password","handleFieldChange","preventDefault","Auth","signIn","userHasAuthenticated","message","onSubmit","FormGroup","controlId","bsSize","ControlLabel","FormControl","autoFocus","type","onChange","block","length","AppliedRoute","C","component","appProps","rest","render","Signup","confirmPassword","confirmationCode","newUser","setNewUser","handleSubmit","signUp","username","handleConfirmationSubmit","confirmSignUp","history","push","HelpBlock","MAX_ATTACHMENT_SIZE","STRIPE_KEY","s3","REGION","BUCKET","apiGateway","URL","cognito","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","s3Upload","file","filename","now","name","Storage","vault","put","contentType","stored","jimp","require","size","console","log","Error","Math","round","imageUrl","createObjectURL","read","image","_originalMime","bitmap","width","height","x","y","hex","getPixelColor","rgb","intToRGBA","r","g","b","NewNote","useRef","setContent","current","config","f","ImageInfo","attachment","createNote","post","body","componentClass","e","files","bsStyle","Notes","setNote","isDeleting","setIsDeleting","saveNote","match","params","window","confirm","del","attachmentURL","Static","rel","href","replace","onClick","injectStripe","storage","isProcessing","setIsProcessing","isCardComplete","setIsCardComplete","stripe","createToken","token","error","min","placeholder","complete","style","base","fontSize","fontFamily","Settings","billUser","details","source","apiKey","AuthenticatedRoute","location","pathname","search","UnauthenticatedRoute","redirect","url","results","RegExp","exec","decodeURIComponent","querystring","Routes","path","exact","withRouter","isAuthenticating","setIsAuthenticating","currentSession","signOut","Navbar","fluid","collapseOnSelect","Header","Brand","Toggle","Collapse","Nav","pullRight","NavItem","Boolean","hostname","Amplify","configure","mandatorySignIn","region","userPoolId","identityPoolId","userPoolWebClientId","bucket","endpoints","endpoint","ReactDOM","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e91fd6cf.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { PageHeader, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport \"./Home.css\";\nimport { API } from \"aws-amplify\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nexport default function Home(props) {\n  const [notes, setNotes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    async function onLoad() {\n      if (!props.isAuthenticated) {\n        return;\n      }\n  \n      try {\n        const notes = await loadNotes();\n        setNotes(notes);\n      } catch (e) {\n        alert(e);\n      }\n  \n      setIsLoading(false);\n    }\n  \n    onLoad();\n  }, [props.isAuthenticated]);\n  \n  function loadNotes() {\n    return API.get(\"notes\", \"/notes\");\n  }\n\n  function renderNotesList(notes) {\n    return [{}].concat(notes).map((note, i) =>\n      i !== 0 ? (\n        <LinkContainer key={note.noteID} to={`/notes/${note.noteID}`}>\n          <ListGroupItem header={note.content.trim().split(\"\\n\")[0]}>\n            {\"Created: \" + new Date(note.createdAt).toLocaleString()}\n          </ListGroupItem>\n        </LinkContainer>\n      ) : (\n        <LinkContainer key=\"new\" to=\"/notes/new\">\n          <ListGroupItem>\n            <h4>\n              <b>{\"\\uFF0B\"}</b> Create a new upload\n            </h4>\n          </ListGroupItem>\n        </LinkContainer>\n      )\n    );\n  }\n\n  function renderLander() {\n    return (\n      <div className=\"lander\">\n        <h1>ITC-6480 - We Hate Servers</h1>\n        <p>File Upload Front End</p>\n      </div>\n    );\n  }\n\n  function renderNotes() {\n    return (\n      <div className=\"notes\">\n        <PageHeader>Your Uploads</PageHeader>\n        <ListGroup>\n          {!isLoading && renderNotesList(notes)}\n        </ListGroup>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Home\">\n      {props.isAuthenticated ? renderNotes() : renderLander()}\n    </div>\n  );\n}","import React from \"react\";\nimport \"./NotFound.css\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h3>Sorry, 404!</h3>\n    </div>\n  );\n}","import React from \"react\";\nimport { Button, Glyphicon } from \"react-bootstrap\";\nimport \"./LoaderButton.css\";\n\nexport default function LoaderButton({\n  isLoading,\n  className = \"\",\n  disabled = false,\n  ...props\n}) {\n  return (\n    <Button\n      className={`LoaderButton ${className}`}\n      disabled={disabled || isLoading}\n      {...props}\n    >\n      {isLoading && <Glyphicon glyph=\"refresh\" className=\"spinning\" />}\n      {props.children}\n    </Button>\n  );\n}","import { useState } from \"react\";\n\nexport function useFormFields(initialState) {\n  const [fields, setValues] = useState(initialState);\n\n  return [\n    fields,\n    function(event) {\n      setValues({\n        ...fields,\n        [event.target.id]: event.target.value\n      });\n    }\n  ];\n}","import React, { useState } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport \"./Login.css\";\n\nexport default function Login(props) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [fields, handleFieldChange] = useFormFields({\n    email: \"\",\n    password: \"\"\n  });\n\n  function validateForm() {\n    return fields.email.length > 0 && fields.password.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    try {\n      await Auth.signIn(fields.email, fields.password);\n      props.userHasAuthenticated(true);\n      //props.history.push(\"/\");\n    } catch (e) {\n      alert(e.message);\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <div className=\"Login\">\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"email\" bsSize=\"large\">\n          <ControlLabel>Email</ControlLabel>\n          <FormControl\n            autoFocus\n            type=\"email\"\n            value={fields.email}\n            onChange={handleFieldChange}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\" bsSize=\"large\">\n          <ControlLabel>Password</ControlLabel>\n          <FormControl\n            type=\"password\"\n            value={fields.password}\n            onChange={handleFieldChange}\n          />\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          isLoading={isLoading}\n          disabled={!validateForm()}\n        >\n          Login\n        </LoaderButton>\n      </form>\n    </div>\n  );\n}","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nexport default function AppliedRoute({ component: C, appProps, ...rest }) {\n  return (\n    <Route {...rest} render={props => <C {...props} {...appProps} />} />\n  );\n}","import React, { useState } from \"react\";\nimport {\n  HelpBlock,\n  FormGroup,\n  FormControl,\n  ControlLabel\n} from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport \"./Signup.css\";\nimport { Auth } from \"aws-amplify\";\n\nexport default function Signup(props) {\n  const [fields, handleFieldChange] = useFormFields({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    confirmationCode: \"\"\n  });\n  const [newUser, setNewUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function validateForm() {\n    return (\n      fields.email.length > 0 &&\n      fields.password.length > 0 &&\n      fields.password === fields.confirmPassword\n    );\n  }\n\n  function validateConfirmationForm() {\n    return fields.confirmationCode.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n  \n    setIsLoading(true);\n  \n    try {\n      const newUser = await Auth.signUp({\n        username: fields.email,\n        password: fields.password\n      });\n      setIsLoading(false);\n      setNewUser(newUser);\n    } catch (e) {\n      alert(e.message);\n      setIsLoading(false);\n    }\n  }\n  \n  async function handleConfirmationSubmit(event) {\n    event.preventDefault();\n  \n    setIsLoading(true);\n  \n    try {\n      await Auth.confirmSignUp(fields.email, fields.confirmationCode);\n      await Auth.signIn(fields.email, fields.password);\n  \n      props.userHasAuthenticated(true);\n      props.history.push(\"/\");\n    } catch (e) {\n      alert(e.message);\n      setIsLoading(false);\n    }\n  }\n\n  function renderConfirmationForm() {\n    return (\n      <form onSubmit={handleConfirmationSubmit}>\n        <FormGroup controlId=\"confirmationCode\" bsSize=\"large\">\n          <ControlLabel>Confirmation Code</ControlLabel>\n          <FormControl\n            autoFocus\n            type=\"tel\"\n            onChange={handleFieldChange}\n            value={fields.confirmationCode}\n          />\n          <HelpBlock>Please check your email for the code.</HelpBlock>\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          isLoading={isLoading}\n          disabled={!validateConfirmationForm()}\n        >\n          Verify\n        </LoaderButton>\n      </form>\n    );\n  }\n\n  function renderForm() {\n    return (\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"email\" bsSize=\"large\">\n          <ControlLabel>Email</ControlLabel>\n          <FormControl\n            autoFocus\n            type=\"email\"\n            value={fields.email}\n            onChange={handleFieldChange}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\" bsSize=\"large\">\n          <ControlLabel>Password</ControlLabel>\n          <FormControl\n            type=\"password\"\n            value={fields.password}\n            onChange={handleFieldChange}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"confirmPassword\" bsSize=\"large\">\n          <ControlLabel>Confirm Password</ControlLabel>\n          <FormControl\n            type=\"password\"\n            onChange={handleFieldChange}\n            value={fields.confirmPassword}\n          />\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          isLoading={isLoading}\n          disabled={!validateForm()}\n        >\n          Signup\n        </LoaderButton>\n      </form>\n    );\n  }\n\n  return (\n    <div className=\"Signup\">\n      {newUser === null ? renderForm() : renderConfirmationForm()}\n    </div>\n  );\n}","export default {\n  MAX_ATTACHMENT_SIZE: 5000000,\n  STRIPE_KEY: \"pk_test_SHMgaMI6U1lfn5i05oMxKTVM00ne6RLkT9\",\n  s3: {\n    REGION: \"us-east-1\",\n    BUCKET: \"lambda-app2-dev-attachmentsbucket-1qwxwfz0zidr5\"\n  },\n  apiGateway: {\n    REGION: \"us-east-1\",\n    URL: \"https://6pal3ddil4.execute-api.us-east-1.amazonaws.com/dev\"\n  },\n  cognito: {\n    REGION: \"us-east-1\",\n    USER_POOL_ID: \"us-east-1_rkOkj3PrU\",\n    APP_CLIENT_ID: \"3ntkhql0dhmtt78pfp1hp86c34\",\n    IDENTITY_POOL_ID: \"us-east-1:e9c4216c-6443-4730-868c-94795e773bfc\"\n  }\n};\n","import { Storage } from \"aws-amplify\";\n//unique filename of Date.now()\n//returns stored object's key\nexport async function s3Upload(file) {\n  const filename = `${Date.now()}-${file.name}`;\n\n  const stored = await Storage.vault.put(filename, file, {\n    contentType: file.type\n  });\n\n  return stored.key;\n}","const jimp = require('jimp');\n\nexport default async (file) => {\n\n  // 1. check file size\n  const { name, size } = file;\n  console.log(name);\n  if (size > 4 * 1024 * 1024) {\n    throw new Error(`${name} (${Math.round(size / 10000) / 100}) is oversize 4MB`);\n  }\n\n  const imageUrl = URL.createObjectURL(file);\n  const image = await jimp.read(imageUrl);\n\n  // 2. check image type\n  const type = image._originalMime;\n  if (type !== 'image/jpeg') {\n    throw new Error(`${name} (${type}) should be JPG format`);\n  }\n\n  // 3. check image width and height\n  const {width, height} = image.bitmap;\n  if (width < 600 || width > 4200 || height < 100 || height > 4200) {\n    throw new Error(`${name} (${width}x${height}) is not in the range of 600x1000 to 4200x4200`);\n  }\n\n  // 4. check black and white in each pixel\n  for (let x = 0; x < width; x++) {\n    for (let y = 0; y < height; y++) {\n      const hex = image.getPixelColor(x, y);\n      const rgb = jimp.intToRGBA(hex);\n\n      const { r, g, b } = rgb;\n      if (r !== g || g !== b) {\n        throw new Error(`${name} is not black and white image because pixel (${x},${y}) RGB is (${r},${g},${b})`);\n      }\n    }\n  }\n\n  // image info\n  return {name, type, size, width, height};\n}\n","import React, { useRef, useState } from \"react\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport config from \"../config\";\nimport \"./NewNote.css\";\n//import AWS Amplify to connect our API\nimport { API } from \"aws-amplify\";\nimport { s3Upload } from \"../libs/awsLib\";\nimport ImageInfo from '../libs/ImageInfo';\n\nexport default function NewNote(props) {\n  const file = useRef(null);\n  const [content, setContent] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  function validateForm() {\n    return content.length > 0;\n  }\n\n  function handleFileChange(event) {\n    console.log(event.target.files);\n\n    file.current = event.target.files;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\n      alert(\n        `Please pick a file smaller than ${config.MAX_ATTACHMENT_SIZE /\n          1000000} MB.`\n      );\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      // check image\n      const f = file.current[0];\n      await ImageInfo(f);\n\n      const attachment = await s3Upload(f);\n      await createNote({ content, attachment });\n\n      props.history.push(\"/\");\n\n    } catch (e) {\n      alert(e.message);\n      setIsLoading(false);\n    }\n\n    // upload file using s3Upload method\n    // try {\n    //   const promiseList = [];\n    //   for (let i = 0; i < file.current.length; i++) {\n    //     promiseList.push(\n    //       uploadfilePromise(file.current[i])\n    //     );\n    //   }\n    //\n    //   const result = await Promise.all(promiseList);\n    //   console.log(result);\n    //   props.history.push(\"/\");\n    // } catch (e) {\n    //   alert(e);\n    //   setIsLoading(false);\n    // }\n  }\n\n  function createNote(note) {\n    return API.post(\"notes\", \"/notes\", {\n      body: note\n    });\n  }\n\n  function uploadfilePromise(file) {\n\n    return s3Upload(file)\n      .then(attachment => {\n        return createNote({ content, attachment });\n      })\n  }\n\n  // added multiple in FormControl\n  return (\n    <div className=\"NewNote\">\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"content\">\n          <FormControl\n            value={content}\n            componentClass=\"textarea\"\n            onChange={e => setContent(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"file\">\n          <ControlLabel>Attachment</ControlLabel>\n          <FormControl onChange={handleFileChange} type=\"file\" />\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          bsStyle=\"primary\"\n          isLoading={isLoading}\n          disabled={!validateForm()}\n        >\n          Create\n        </LoaderButton>\n      </form>\n    </div>\n  );\n}\n","import React, { useRef, useState, useEffect } from \"react\";\nimport { API, Storage } from \"aws-amplify\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport config from \"../config\";\nimport \"./Notes.css\";\nimport { s3Upload } from \"../libs/awsLib\";\nexport default function Notes(props) {\n  const file = useRef(null);\n  const [note, setNote] = useState(null);\n  const [content, setContent] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  useEffect(() => {\n    function loadNote() {\n      return API.get(\"notes\", `/notes/${props.match.params.id}`);\n    }\n\n    async function onLoad() {\n      try {\n        const note = await loadNote();\n        const { content, attachment } = note;\n\n        if (attachment) {\n          note.attachmentURL = await Storage.vault.get(attachment);\n        }\n\n        setContent(content);\n        setNote(note);\n      } catch (e) {\n        alert(e);\n      }\n    }\n\n    onLoad();\n  }, [props.match.params.id]);\n//RETURN\nfunction validateForm() {\n  return content.length > 0;\n}\n\nfunction formatFilename(str) {\n  return str.replace(/^\\w+-/, \"\");\n}\n\nfunction handleFileChange(event) {\n  file.current = event.target.files[0];\n}\n//HANDLE SUBMIT FUNCTION\n//NOTE updating FILE JUST ATTACHED NOTED\n//https://aws.github.io/aws-amplify/api/classes/storageclass.html#remove to update file\nfunction saveNote(note) {\n  return API.put(\"notes\", `/notes/${props.match.params.id}`, {\n    body: note\n  });\n}\n\nasync function handleSubmit(event) {\n  let attachment;\n\n  event.preventDefault();\n\n  if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\n    alert(\n      `Please pick a file smaller than ${config.MAX_ATTACHMENT_SIZE /\n        1000000} MB.`\n    );\n    return;\n  }\n\n  setIsLoading(true);\n\n  try {\n    if (file.current) {\n      attachment = await s3Upload(file.current);\n    }\n\n    await saveNote({\n      content,\n      attachment: attachment || note.attachment\n    });\n    props.history.push(\"/\");\n  } catch (e) {\n    alert(e);\n    setIsLoading(false);\n  }\n}\n\n//HANDLE DELETE FUNCTION\n//NOTE NOT DELETING FILE JUST ATTACHED NOTED\n//https://aws.github.io/aws-amplify/api/classes/storageclass.html#remove to remove file\nfunction deleteNote() {\n  return API.del(\"notes\", `/notes/${props.match.params.id}`);\n}\n\nasync function handleDelete(event) {\n  event.preventDefault();\n\n  const confirmed = window.confirm(\n    \"Are you sure you want to delete this note?\"\n  );\n\n  if (!confirmed) {\n    return;\n  }\n\n  setIsDeleting(true);\n\n  try {\n    await deleteNote();\n    props.history.push(\"/\");\n  } catch (e) {\n    alert(e);\n    setIsDeleting(false);\n  }\n}\n\nreturn (\n  <div className=\"Notes\">\n    {note && (\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"content\">\n          <FormControl\n            value={content}\n            componentClass=\"textarea\"\n            onChange={e => setContent(e.target.value)}\n          />\n        </FormGroup>\n        {note.attachment && (\n          <FormGroup>\n            <ControlLabel>Attachment</ControlLabel>\n            <FormControl.Static>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={note.attachmentURL}\n              >\n                {formatFilename(note.attachment)}\n              </a>\n            </FormControl.Static>\n          </FormGroup>\n        )}\n        <FormGroup controlId=\"file\">\n          {!note.attachment && <ControlLabel>Attachment</ControlLabel>}\n          <FormControl onChange={handleFileChange} type=\"file\" />\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          bsStyle=\"primary\"\n          isLoading={isLoading}\n          disabled={!validateForm()}\n        >\n          Save\n        </LoaderButton>\n        <LoaderButton\n          block\n          bsSize=\"large\"\n          bsStyle=\"danger\"\n          onClick={handleDelete}\n          isLoading={isDeleting}\n        >\n          Delete\n        </LoaderButton>\n      </form>\n    )}\n  </div>\n);\n}","import React, { useState } from \"react\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport { CardElement, injectStripe } from \"react-stripe-elements\";\nimport LoaderButton from \"./LoaderButton\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport \"./BillingForm.css\";\n\nfunction BillingForm({ isLoading, onSubmit, ...props }) {\n  const [fields, handleFieldChange] = useFormFields({\n    name: \"\",\n    storage: \"\"\n  });\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [isCardComplete, setIsCardComplete] = useState(false);\n\n  isLoading = isProcessing || isLoading;\n\n  function validateForm() {\n    return (\n      fields.name !== \"\" &&\n      fields.storage !== \"\" &&\n      isCardComplete\n    );\n  }\n\n  async function handleSubmitClick(event) {\n    event.preventDefault();\n\n    setIsProcessing(true);\n\n    const { token, error } = await props.stripe.createToken({ name: fields.name });\n\n    setIsProcessing(false);\n\n    onSubmit(fields.storage, { token, error });\n  }\n\n  return (\n    <form className=\"BillingForm\" onSubmit={handleSubmitClick}>\n      <FormGroup bsSize=\"large\" controlId=\"storage\">\n        <ControlLabel>Storage</ControlLabel>\n        <FormControl\n          min=\"0\"\n          type=\"number\"\n          value={fields.storage}\n          onChange={handleFieldChange}\n          placeholder=\"Number of notes to store\"\n        />\n      </FormGroup>\n      <hr />\n      <FormGroup bsSize=\"large\" controlId=\"name\">\n        <ControlLabel>Cardholder&apos;s name</ControlLabel>\n        <FormControl\n          type=\"text\"\n          value={fields.name}\n          onChange={handleFieldChange}\n          placeholder=\"Name on the card\"\n        />\n      </FormGroup>\n      <ControlLabel>Credit Card Info</ControlLabel>\n      <CardElement\n        className=\"card-field\"\n        onChange={e => setIsCardComplete(e.complete)}\n        style={{\n          base: { fontSize: \"18px\", fontFamily: '\"Open Sans\", sans-serif' }\n        }}\n      />\n      <LoaderButton\n        block\n        type=\"submit\"\n        bsSize=\"large\"\n        isLoading={isLoading}\n        disabled={!validateForm()}\n      >\n        Purchase\n      </LoaderButton>\n    </form>\n  );\n}\n\nexport default injectStripe(BillingForm);","import React, { useState } from \"react\";\nimport { API } from \"aws-amplify\";\nimport { Elements, StripeProvider } from \"react-stripe-elements\";\nimport BillingForm from \"../components/BillingForm\";\nimport config from \"../config\";\nimport \"./Settings.css\";\n\nexport default function Settings(props) {\n  const [isLoading, setIsLoading] = useState(false);\n\n  function billUser(details) {\n    return API.post(\"notes\", \"/billing\", {\n      body: details\n    });\n  }\n\n  async function handleFormSubmit(storage, { token, error }) {\n    if (error) {\n      alert(error);\n      return;\n    }\n  \n    setIsLoading(true);\n  \n    try {\n      await billUser({\n        storage,\n        source: token.id\n      });\n  \n      alert(\"Your card has been charged successfully!\");\n      props.history.push(\"/\");\n    } catch (e) {\n      alert(e);\n      setIsLoading(false);\n    }\n  }\n  \n  async function handleFormSubmit(storage, { token, error }) {\n    if (error) {\n      alert(error);\n      return;\n    }\n  \n    setIsLoading(true);\n  \n    try {\n      await billUser({\n        storage,\n        source: token.id\n      });\n  \n      alert(\"Your card has been charged successfully!\");\n      props.history.push(\"/\");\n    } catch (e) {\n      alert(e);\n      setIsLoading(false);\n    }\n  }\n  \n  return (\n    <div className=\"Settings\">\n      <StripeProvider apiKey={config.STRIPE_KEY}>\n        <Elements>\n          <BillingForm\n            isLoading={isLoading}\n            onSubmit={handleFormSubmit}\n          />\n        </Elements>\n      </StripeProvider>\n    </div>\n  );\n}","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport default function AuthenticatedRoute({ component: C, appProps, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        appProps.isAuthenticated\n          ? <C {...props} {...appProps} />\n          : <Redirect\n              to={`/login?redirect=${props.location.pathname}${props.location\n                .search}`}\n            />}\n    />\n  );\n}","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction querystring(name, url = window.location.href) {\n  name = name.replace(/[[]]/g, \"\\\\$&\");\n\n  const regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\", \"i\");\n  const results = regex.exec(url);\n\n  if (!results) {\n    return null;\n  }\n  if (!results[2]) {\n    return \"\";\n  }\n\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\n\nexport default function UnauthenticatedRoute({ component: C, appProps, ...rest }) {\n  const redirect = querystring(\"redirect\");\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        !appProps.isAuthenticated\n          ? <C {...props} {...appProps} />\n          : <Redirect\n              to={redirect === \"\" || redirect === null ? \"/\" : redirect}\n            />}\n    />\n  );\n}","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"./containers/Home\";\nimport NotFound from \"./containers/NotFound\";\nimport Login from \"./containers/Login\";\nimport AppliedRoute from \"./components/AppliedRoute\";\nimport Signup from \"./containers/Signup\";\nimport NewNote from \"./containers/NewNote\";\nimport Notes from \"./containers/Notes\";\nimport Settings from \"./containers/Settings\";\nimport AuthenticatedRoute from \"./components/AuthenticatedRoute\";\nimport UnauthenticatedRoute from \"./components/UnauthenticatedRoute\";\n\n\nexport default function Routes({ appProps }) {\n  return (\n    <Switch>\n      <AppliedRoute path=\"/\" exact component={Home} appProps={appProps} />\n      <UnauthenticatedRoute path=\"/login\" exact component={Login} appProps={appProps} />\n      <UnauthenticatedRoute path=\"/signup\" exact component={Signup} appProps={appProps} />\n      <AuthenticatedRoute path=\"/settings\" exact component={Settings} appProps={appProps} />\n      <AuthenticatedRoute path=\"/notes/new\" exact component={NewNote} appProps={appProps} />\n      <AuthenticatedRoute path=\"/notes/:id\" exact component={Notes} appProps={appProps} />\n            { /* Finally, catch all unmatched routes */ }\n      <Route component={NotFound} />\n    </Switch>\n  );\n}","// updating this to store the login state: import React from \"react\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\nimport \"./App.css\";\nimport Routes from \"./Routes\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Auth } from \"aws-amplify\";\n\n\n\n//our function\nfunction App(props) {\n  //state variable that makes login info persist, start app by checking current authentication state\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n  //initializes the isAuthinticated state variable to false\n  //calling userHasAuthenticated updates the state\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n  //load user session\n  useEffect(() => {\n    onLoad();\n  }, []);\n  \n  async function onLoad() {\n    try {\n      await Auth.currentSession();\n      userHasAuthenticated(true);\n    }\n    catch(e) {\n      if (e !== 'No current user') {\n        alert(e);\n      }\n    }\n  \n    setIsAuthenticating(false);\n  }\n  \n  //clears out login session from the browser\n  async function handleLogout() {\n    await Auth.signOut();\n  \n    userHasAuthenticated(false);\n    //redirect to login after logout\n    props.history.push(\"/login\");\n       \n  }\n  \n  return (\n    !isAuthenticating && (\n      <div className=\"App container\">\n        <Navbar fluid collapseOnSelect>\n          <Navbar.Header>\n            <Navbar.Brand>\n              <Link to=\"/\">ITC-6480 - We Hate Servers</Link>\n            </Navbar.Brand>\n            <Navbar.Toggle />\n          </Navbar.Header>\n          <Navbar.Collapse>\n            <Nav pullRight>\n              {isAuthenticated ? (\n                <>\n                  <LinkContainer to=\"/settings\">\n                    <NavItem>Settings</NavItem>\n                  </LinkContainer>\n                  <NavItem onClick={handleLogout}>Logout</NavItem>\n                </>\n              ) : (\n                <>\n                  <LinkContainer to=\"/signup\">\n                    <NavItem>Signup</NavItem>\n                  </LinkContainer>\n                  <LinkContainer to=\"/login\">\n                    <NavItem>Login</NavItem>\n                  </LinkContainer>\n                </>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Routes appProps={{ isAuthenticated, userHasAuthenticated }} />\n      </div>\n    )\n  );\n}\n\n//export default App;\n//redirect to login after logout\nexport default withRouter(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n//added\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Amplify from 'aws-amplify';\nimport config from './config';\n\n//amplify used to talk to AWS resources in the backend!\nAmplify.configure({\n  Auth: {\n    mandatorySignIn: true,\n    region: config.cognito.REGION,\n    userPoolId: config.cognito.USER_POOL_ID,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID,\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID\n  },\n  Storage: {\n    region: config.s3.REGION,\n    bucket: config.s3.BUCKET,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID\n  },\n  API: {\n    endpoints: [\n      {\n        name: \"notes\",\n        endpoint: config.apiGateway.URL,\n        region: config.apiGateway.REGION\n      },\n    ]\n  }\n});\n\n//removed: ReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(\n    <Router basename=\"/serverless-stack-client\" >\n      <App />\n    </Router>,\n    document.getElementById('root')\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}